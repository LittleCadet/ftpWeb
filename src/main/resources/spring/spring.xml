<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath*:*.properties"/>

    <bean id="ftpDelete" class="com.myproj.ftp.FtpDelete">
        <property name="remoteDeleteFilePath" value="${remoteDeleteFilePath}"/>
    </bean>

    <bean id="ftpDownload" class="com.myproj.ftp.FtpDownload">
        <property name="remoteDownloadFilePath" value="${remoteDownloadFilePath}"/>
        <property name="localDownloadFilePath" value="${localDownloadFilePath}"/>
    </bean>

    <bean id="ftpUpload" class="com.myproj.ftp.FtpUpload">
        <property name="remoteUploadFilePath" value="${remoteUploadFilePath}"/>
        <property name="localUploadFilePath" value="${localUploadFilePath}"/>
    </bean>

    <bean id = "ftpBatchUpload" class="com.myproj.ftp.FtpBatchUpload">
        <property name="batchUploadFilePath" value="${batchUploadFilePath}"/>
    </bean>

    <bean id = "ftpBatchDelete" class="com.myproj.ftp.FtpBatchDelete">
        <property name="batchDeleteFilePath" value="${batchDeleteFilePath}"/>
    </bean>

    <bean id = "ftpBatchDownload" class="com.myproj.ftp.FtpBatchDownload">
        <property name="batchDownloadFilePath" value="${batchDownloadFilePath}"/>
    </bean>

    <bean id="scanDirectory" class="com.myproj.ftp.ScanDirectory">
        <property name="remoteDownloadFilePath" value="${remoteDownloadFilePath}"/>
    </bean>

    <bean id="ftpUtil" class="com.myproj.tools.FtpUtil">
        <property name="host" value="${host}"/>
        <property name="account" value="${account}"/>
        <property name="password" value="${password}"/>
        <property name="timeOut" value="${timeOut}"/>
        <property name="reTryTimes" value="${reTryTimes}"/>
    </bean>


    <!-- 先配置job1-->
    <bean name="ftpDownloadJobBean" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="ftpDownload"/>
        <property name="targetMethod" value="download"/>
        <property name="concurrent" value="false"/>
    </bean>

    <!--Quartz的定时任务1 的触发器 -->
    <bean id="ftpDownloadTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="ftpDownloadJobBean">
        </property>
        <property name="cronExpression" value="${download.cronExpression}" />
    </bean>

    <!-- 先配置job2-->
    <bean name="scanDirectoryJobBean" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="scanDirectory"/>
        <property name="targetMethod" value="scan"/>
        <property name="concurrent" value="false"/>
    </bean>

    <!--Quartz的定时任务2 的触发器 -->
    <bean id="scanDirectoryrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="scanDirectoryJobBean"/>
        <property name="cronExpression" value="${scan.cronExpression}" />
    </bean>

    <!-- 中心调度器-->
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no">
        <property name="triggers">
            <list>
                <!-- 执行定时下载服务器上文件-->
                <ref bean="ftpDownloadTrigger" />

                <!-- 执行定时扫描服务器上的文件，一旦变动即可触发下载任务-->
                <ref bean="scanDirectoryrigger" />
            </list>
        </property>
    </bean>

</beans>